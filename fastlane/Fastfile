fastlane_version "1.98.0"

lane :test_ios14 do
  scan(devices: ["iPhone 11 Pro (14.0)"], scheme: 'Tests-iOS')
  sh "bash ../codecov.sh"
end

lane :test_ios13 do
  scan(devices: ["iPad Pro (12.9-inch) (3rd generation) (13.5)"])
  sh "bash ../codecov.sh"
end

lane :test_tvos14 do
  scan(device: "Apple TV 4K (14.0)")
end

lane :test_tvos13 do
  scan(device: "Apple TV 4K (13.3)")
end

lane :test_macos do
  scan(destination: "arch=x86_64")
  sh "bash ../codecov.sh"
end

lane :build_watchos do
  xcodebuild(
    build: true,
    destination: "OS=6.2.1,name=Apple Watch Series 4 - 44mm"
  )
end

lane :build_watchos_xcode12 do
  xcodebuild(
    build: true,
    destination: "OS=7.0,name=Apple Watch Series 4 - 44mm"
  )
end

lane :pod_lint do
  sh "bundle exec pod repo update"
  pod_lib_lint(allow_warnings: true, verbose: true)
end

lane :carthage_build do
  carthage(command: "build", no_skip_current: true, verbose: true)
end

lane :spm_macos do
  sh "swift build"
end

lane :release do |params|
  version = params[:version]

  abort "You must specify a version in semver format." if version.nil? || version.scan(/\d+\.\d+\.\d+(-\w+\.\d+)?/).length == 0

  puts "Setting Framework version"
  increment_version_number(version_number: version)

  Dir.chdir("..") do

    puts "Updating podspec."
    filename = "EasyMapping.podspec"
    contents = File.read(filename)
    contents.gsub!(/s\.version\s*=\s"\d+\.\d+\.\d+(-\w+\.\d)?"/, "s.version      = \"#{version}\"")
    File.open(filename, 'w') { |file| file.puts contents }

    puts "Updating changelog."
    changelog_filename = "CHANGELOG.md"
    changelog = File.read(changelog_filename)
    changelog.gsub!(/# Next/, "# Next\n\n## [#{version}](https://github.com/lucasmedeirosleite/EasyMapping/releases/tag/#{version})")
    File.open(changelog_filename, 'w') { |file| file.puts changelog }

    puts "Comitting, tagging, and pushing."
    message = "Releasing version #{version}."
    sh "git commit -am '#{message}'"
    sh "git tag #{version} -m '#{message}'"
    sh "git push --follow-tags"

    puts "Pushing to CocoaPods trunk."
    sh "bundle exec pod trunk push EasyMapping.podspec --allow-warnings"

    puts "Pushing as a GitHub Release."
    fastlane_require 'octokit'
    stripped_changelog = changelog.split(/^## /)[1].split("\n")[1..-1].join("\n").strip
    Octokit::Client.new(netrc: true).
      create_release('lucasmedeirosleite/EasyMapping',
                     version,
                     name: version,
                     body: stripped_changelog)
  end
end
